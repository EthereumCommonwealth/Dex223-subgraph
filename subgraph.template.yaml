specVersion: 0.0.7
description: DEX223 is a decentralized protocol for automated token exchange on Ethereum support tokens ERC20 and ERC223.
repository: https://github.com/kostya12362/dex223-subgraph
schema:
  file: ./schema.graphql
features:
  - nonFatalErrors
  - grafting
dataSources:
  - kind: ethereum/contract
    name: {{ v1.contracts.factory.name }}
    network: {{ network }}
    source:
      address: '{{ v1.contracts.factory.address }}'
      abi: factory
      startBlock: {{ v1.contracts.factory.startBlock }}
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.7
      language: wasm/assemblyscript
      file: ./src/mappings/factory.ts
      entities:
        - Pool
        - Token
      abis:
        - name: factory
          file: ./abis/factory.json
        - name: ERC20andERC223
          file: ./abis/ERC20andERC223.json
        - name: ERC20andERC223SymbolBytes
          file: ./abis/ERC20andERC223SymbolBytes.json
        - name: ERC20andERC223NameBytes
          file: ./abis/ERC20andERC223NameBytes.json
        - name: Pool
          file: ./abis/pool.json
        - name: TokenConverter
          file: ./abis/TokenConverter.json
      eventHandlers:
        - event: PoolCreated(indexed address,indexed address,address,address,indexed uint24,int24,address)
          handler: handlePoolCreated
  # - kind: ethereum/contract
  #   name: NonfungiblePositionManager
  #   network: {{ network }}
  #   source:
  #     address: '{{ v1.contracts.nonfungiblePositionManager.address }}'
  #     abi: NonfungiblePositionManager
  #     startBlock: {{ v1.contracts.nonfungiblePositionManager.startBlock }}
  #   mapping:
  #     kind: ethereum/events
  #     apiVersion: 0.0.7
  #     language: wasm/assemblyscript
  #     file: ./src/mappings/position-manager.ts
  #     entities:
  #       - Pool
  #       - Token
  #     abis:
  #       - name: NonfungiblePositionManager
  #         file: ./abis/NonfungiblePositionManager.json
  #       - name: Pool
  #         file: ./abis/pool.json
  #       - name: Factory
  #         file: ./abis/factory.json
  #       - name: ERC20andERC223
  #         file: ./abis/ERC20andERC223.json
  #     eventHandlers:
  #       - event: IncreaseLiquidity(indexed uint256,uint128,uint256,uint256)
  #         handler: handleIncreaseLiquidity
  #       - event: DecreaseLiquidity(indexed uint256,uint128,uint256,uint256)
  #         handler: handleDecreaseLiquidity
  #       - event: Collect(indexed uint256,address,uint256,uint256)
  #         handler: handleCollect
  #       - event: Transfer(indexed address,indexed address,indexed uint256,bytes)
  #         handler: handleTransfer
  - kind: ethereum/contract
    name: TokenConverter
    network: {{ network }}
    source:
      address: '{{ v1.contracts.tokenConverter.address }}'
      abi: TokenConverter
      startBlock: {{ v1.contracts.tokenConverter.startBlock }}
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.7
      language: wasm/assemblyscript
      file: ./src/mappings/token-converter.ts
      entities:
        - Token
        - TokenConvertible
      abis:
        - name: TokenConverter
          file: ./abis/TokenConverter.json
        - name: ERC20andERC223
          file: ./abis/ERC20andERC223.json
      eventHandlers:
        - event: ERC20WrapperCreated(indexed address,indexed address)
          handler: handleERC20WrapperCreated
        - event: ERC223WrapperCreated(indexed address,indexed address)
          handler: handleERC223WrapperCreated
templates:
  - kind: ethereum/contract
    name: Pool
    network: {{ network }}
    source:
      abi: Pool
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.7
      language: wasm/assemblyscript
      file: ./src/mappings/pool/index.ts
      entities:
        - Pool
        - Token
      abis:
        - name: Pool
          file: ./abis/pool.json
        - name: Factory
          file: ./abis/factory.json
        - name: ERC20andERC223
          file: ./abis/ERC20andERC223.json
        - name: TokenConverter
          file: ./abis/TokenConverter.json
      eventHandlers:
        - event: Initialize(uint160,int24)
          handler: handleInitialize
        - event: Swap(indexed address,indexed address,int256,int256,uint160,uint128,int24)
          handler: handleSwap
        - event: Mint(address,indexed address,indexed int24,indexed int24,uint128,uint256,uint256)
          handler: handleMint
        - event: Burn(indexed address,indexed int24,indexed int24,uint128,uint256,uint256)
          handler: handleBurn
        - event: Flash(indexed address,indexed address,uint256,uint256,uint256,uint256)
          handler: handleFlash
        - event: Collect(indexed address,address,indexed int24,indexed int24,uint128,uint128)
          handler: handleCollect